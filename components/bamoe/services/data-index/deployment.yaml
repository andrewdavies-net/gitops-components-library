apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-index
  labels:
    app: data-index
    middleware: bamoe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-index
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: data-index
    spec:
      containers:
        - name: bamoe-data-index
          image: quay.io/kiegroup/kogito-data-index-postgresql:main
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: bamoe-event-cluster-kafka-brokers:9092
            - name: KOGITO_DATA_INDEX_PROPS
              value: -Dkogito.protobuf.folder=/home/kogito/data/protobufs/
            - name: QUARKUS_DATASOURCE_JDBC_URL
              valueFrom: { secretKeyRef: { name: bamoe-db-pguser-bamoe-services, key: jdbc-uri } }
            - name: QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION
              value: update
            - name: QUARKUS_DATASOURCE_USERNAME
              value: bamoe-services
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: bamoe-db-pguser-bamoe-services, key: password } }
            - name: QUARKUS_HTTP_CORS_ORIGINS
              value: /.*/
            - name: RUNTIME_TOOLS_MANAGEMENT_CONSOLE_KOGITO_ENV_MODE
              value: PROD
            - name: KOGITO_CONSOLES_KEYCLOAK_URL
              valueFrom:
                configMapKeyRef:
                  name: bamoe-services-endpoints
                  key: KEYCLOAK_URL
            - name: KOGITO_CONSOLES_KEYCLOAK_DISABLE_HEALTH_CHECK
              value: 'true'
            - name: KOGITO_CONSOLES_KEYCLOAK_UPDATE_TOKEN_VALIDITY
              value: '60'
            - name: KOGITO_CONSOLES_KEYCLOAK_REALM
              value: kogito
            - name: KOGITO_CONSOLES_KEYCLOAK_CLIENT_ID
              value: kogito-data-index-service
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /home/kogito/data/protobufs
              name: data-index-claim
      restartPolicy: Always
      volumes:
        - name: data-index-claim
          persistentVolumeClaim:
            claimName: data-index-claim
